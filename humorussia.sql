-- MySQL Script generated by MySQL Workbench
-- Mon Apr 14 10:46:18 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema humorussia-database
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema humorussia-database
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `humorussia-database` DEFAULT CHARACTER SET utf8 ;
USE `humorussia-database` ;

-- -----------------------------------------------------
-- Table `humorussia-database`.`Rating_total`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `humorussia-database`.`Rating_total` (
  `idUser` INT NOT NULL,
  `rank` INT NOT NULL,
  `page` INT NOT NULL,
  PRIMARY KEY (`idUser`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `humorussia-database`.`User`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `humorussia-database`.`User` (
  `idUser` INT NOT NULL AUTO_INCREMENT,
  `nickname` VARCHAR(50) NOT NULL,
  `email` VARCHAR(100) NOT NULL,
  `password_hash` VARCHAR(255) NOT NULL,
  `created_at` TIMESTAMP NOT NULL default '1970-01-01 00:00:01',
  `avatar` BLOB NULL,
  `Rating_total_idUser` INT NOT NULL,
  PRIMARY KEY (`idUser`),
  INDEX `fk_User_Rating_total1_idx` (`Rating_total_idUser` ASC) VISIBLE,
  UNIQUE INDEX `nickname_UNIQUE` (`nickname` ASC) VISIBLE,
  UNIQUE INDEX `email_UNIQUE` (`email` ASC) VISIBLE,
  CONSTRAINT `fk_User_Rating_total1`
    FOREIGN KEY (`Rating_total_idUser`)
    REFERENCES `humorussia-database`.`Rating_total` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `humorussia-database`.`Progress`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `humorussia-database`.`Progress` (
  `idUser` INT NOT NULL AUTO_INCREMENT,
  `completed_levels` INT NOT NULL,
  `tatal_score` INT NOT NULL,
  `User_idUser` INT NOT NULL,
  PRIMARY KEY (`idUser`),
  INDEX `fk_Progress_User_idx` (`User_idUser` ASC) VISIBLE,
  CONSTRAINT `fk_Progress_User`
    FOREIGN KEY (`User_idUser`)
    REFERENCES `humorussia-database`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `humorussia-database`.`Achievement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `humorussia-database`.`Achievement` (
  `idAchievement` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `icon` BLOB NOT NULL,
  `description` MEDIUMTEXT NOT NULL,
  `score_points` INT NOT NULL,
  `is_unlocked` TINYINT(1) NOT NULL,
  PRIMARY KEY (`idAchievement`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `humorussia-database`.`Region_map`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `humorussia-database`.`Region_map` (
  `idRegion_map` INT NOT NULL,
  `number` INT NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `icon` BLOB NULL,
  `is_unlocked` TINYINT(1) NOT NULL,
  PRIMARY KEY (`idRegion_map`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `humorussia-database`.`Notification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `humorussia-database`.`Notification` (
  `idNotification` INT NOT NULL AUTO_INCREMENT,
  `topic` VARCHAR(100) NOT NULL,
  `description` MEDIUMTEXT NOT NULL,
  `time` TIMESTAMP NOT NULL,
  `is_readed` TINYINT(1) NOT NULL,
  `User_idUser` INT NOT NULL,
  PRIMARY KEY (`idNotification`, `User_idUser`),
  INDEX `fk_Notification_User1_idx` (`User_idUser` ASC) VISIBLE,
  CONSTRAINT `fk_Notification_User1`
    FOREIGN KEY (`User_idUser`)
    REFERENCES `humorussia-database`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `humorussia-database`.`Sourse_data_for_analysis`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `humorussia-database`.`Sourse_data_for_analysis` (
  `idSourse_data_for_analysis` INT NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`idSourse_data_for_analysis`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `humorussia-database`.`Recommendation`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `humorussia-database`.`Recommendation` (
  `idRecommendation` INT NOT NULL AUTO_INCREMENT,
  `relevannce_assessment` DECIMAL(7,4) NOT NULL,
  `time` TIMESTAMP NOT NULL,
  `context` MEDIUMTEXT NOT NULL,
  `is_accepted` TINYINT(1) NOT NULL,
  `Notification_idNotification` INT NOT NULL,
  `Sourse_data_for_analysis_idSourse_data_for_analysis` INT NOT NULL,
  PRIMARY KEY (`idRecommendation`),
  INDEX `fk_Recommendation_Notification1_idx` (`Notification_idNotification` ASC) VISIBLE,
  INDEX `fk_Recommendation_Sourse_data_for_analysis1_idx` (`Sourse_data_for_analysis_idSourse_data_for_analysis` ASC) VISIBLE,
  CONSTRAINT `fk_Recommendation_Notification1`
    FOREIGN KEY (`Notification_idNotification`)
    REFERENCES `humorussia-database`.`Notification` (`idNotification`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Recommendation_Sourse_data_for_analysis1`
    FOREIGN KEY (`Sourse_data_for_analysis_idSourse_data_for_analysis`)
    REFERENCES `humorussia-database`.`Sourse_data_for_analysis` (`idSourse_data_for_analysis`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `humorussia-database`.`level`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `humorussia-database`.`level` (
  `idlevel` INT NOT NULL AUTO_INCREMENT,
  `number` INT NOT NULL,
  `subject_matter` VARCHAR(45) NOT NULL,
  `name` VARCHAR(100) NOT NULL,
  `difficulty` DECIMAL(4,2) NOT NULL,
  `prehistory` MEDIUMTEXT NOT NULL,
  `fact_in_conclusion` MEDIUMTEXT NOT NULL,
  `score_points` INT NOT NULL,
  `user_rate` DECIMAL(3,2) NOT NULL,
  `is_completed` TINYINT(1) NOT NULL,
  `Region_map_idRegion_map` INT NOT NULL,
  `Recommendation_idRecommendation` INT NULL,
  PRIMARY KEY (`idlevel`),
  INDEX `fk_level_Region_map1_idx` (`Region_map_idRegion_map` ASC) VISIBLE,
  INDEX `fk_level_Recommendation1_idx` (`Recommendation_idRecommendation` ASC) VISIBLE,
  CONSTRAINT `fk_level_Region_map1`
    FOREIGN KEY (`Region_map_idRegion_map`)
    REFERENCES `humorussia-database`.`Region_map` (`idRegion_map`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_level_Recommendation1`
    FOREIGN KEY (`Recommendation_idRecommendation`)
    REFERENCES `humorussia-database`.`Recommendation` (`idRecommendation`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `humorussia-database`.`Puzzle`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `humorussia-database`.`Puzzle` (
  `idPuzzle` INT NOT NULL AUTO_INCREMENT,
  `type` VARCHAR(45) NOT NULL,
  `is_clue_used` TINYINT(1) NOT NULL,
  `level_idlevel` INT NOT NULL,
  PRIMARY KEY (`idPuzzle`, `level_idlevel`),
  INDEX `fk_Puzzle_level1_idx` (`level_idlevel` ASC) VISIBLE,
  CONSTRAINT `fk_Puzzle_level1`
    FOREIGN KEY (`level_idlevel`)
    REFERENCES `humorussia-database`.`level` (`idlevel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `humorussia-database`.`Additional_conditions`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `humorussia-database`.`Additional_conditions` (
  `idAdditional_conditions` INT NOT NULL,
  `description` MEDIUMTEXT NOT NULL,
  `Puzzle_idPuzzle` INT NOT NULL,
  `Puzzle_level_idlevel` INT NOT NULL,
  PRIMARY KEY (`idAdditional_conditions`, `Puzzle_idPuzzle`, `Puzzle_level_idlevel`),
  INDEX `fk_Additional_conditions_Puzzle1_idx` (`Puzzle_idPuzzle` ASC, `Puzzle_level_idlevel` ASC) VISIBLE,
  CONSTRAINT `fk_Additional_conditions_Puzzle1`
    FOREIGN KEY (`Puzzle_idPuzzle` , `Puzzle_level_idlevel`)
    REFERENCES `humorussia-database`.`Puzzle` (`idPuzzle` , `level_idlevel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `humorussia-database`.`Options`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `humorussia-database`.`Options` (
  `idoptions` INT NOT NULL,
  `description` MEDIUMTEXT NOT NULL,
  `Puzzle_idPuzzle` INT NOT NULL,
  `Puzzle_level_idlevel` INT NOT NULL,
  PRIMARY KEY (`idoptions`, `Puzzle_idPuzzle`, `Puzzle_level_idlevel`),
  INDEX `fk_Options_Puzzle1_idx` (`Puzzle_idPuzzle` ASC, `Puzzle_level_idlevel` ASC) VISIBLE,
  CONSTRAINT `fk_Options_Puzzle1`
    FOREIGN KEY (`Puzzle_idPuzzle` , `Puzzle_level_idlevel`)
    REFERENCES `humorussia-database`.`Puzzle` (`idPuzzle` , `level_idlevel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `humorussia-database`.`Clues`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `humorussia-database`.`Clues` (
  `idClues` INT NOT NULL,
  `text_of_clue` MEDIUMTEXT NOT NULL,
  `Puzzle_idPuzzle` INT NOT NULL,
  `Puzzle_level_idlevel` INT NOT NULL,
  PRIMARY KEY (`idClues`, `Puzzle_idPuzzle`, `Puzzle_level_idlevel`),
  INDEX `fk_Clues_Puzzle1_idx` (`Puzzle_idPuzzle` ASC, `Puzzle_level_idlevel` ASC) VISIBLE,
  CONSTRAINT `fk_Clues_Puzzle1`
    FOREIGN KEY (`Puzzle_idPuzzle` , `Puzzle_level_idlevel`)
    REFERENCES `humorussia-database`.`Puzzle` (`idPuzzle` , `level_idlevel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `humorussia-database`.`Rating_Friends`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `humorussia-database`.`Rating_Friends` (
  `idRating_Friends` INT NOT NULL,
  `rank_friends` INT NOT NULL,
  `page` INT NOT NULL,
  PRIMARY KEY (`idRating_Friends`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `humorussia-database`.`Friend`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `humorussia-database`.`Friend` (
  `idFriend` INT NOT NULL,
  `status` ENUM('0', '1', '2') NOT NULL,
  `Rating_Friends_idRating_Friends` INT NOT NULL,
  PRIMARY KEY (`idFriend`),
  INDEX `fk_Friend_Rating_Friends1_idx` (`Rating_Friends_idRating_Friends` ASC) VISIBLE,
  CONSTRAINT `fk_Friend_Rating_Friends1`
    FOREIGN KEY (`Rating_Friends_idRating_Friends`)
    REFERENCES `humorussia-database`.`Rating_Friends` (`idRating_Friends`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `humorussia-database`.`Chat`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `humorussia-database`.`Chat` (
  `idChat` INT NOT NULL AUTO_INCREMENT,
  `last_time_of_message` TIMESTAMP NOT NULL,
  `Friend_idFriend` INT NOT NULL,
  PRIMARY KEY (`idChat`, `Friend_idFriend`),
  INDEX `fk_Chat_Friend1_idx` (`Friend_idFriend` ASC) VISIBLE,
  CONSTRAINT `fk_Chat_Friend1`
    FOREIGN KEY (`Friend_idFriend`)
    REFERENCES `humorussia-database`.`Friend` (`idFriend`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `humorussia-database`.`Message`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `humorussia-database`.`Message` (
  `idMessage` INT NOT NULL AUTO_INCREMENT,
  `text` MEDIUMTEXT NOT NULL,
  `foto` BLOB NULL,
  `time` TIMESTAMP NOT NULL,
  `Chat_idChat` INT NOT NULL,
  `Notification_idNotification` INT NOT NULL,
  PRIMARY KEY (`idMessage`, `Chat_idChat`),
  INDEX `fk_Message_Chat1_idx` (`Chat_idChat` ASC) VISIBLE,
  INDEX `fk_Message_Notification1_idx` (`Notification_idNotification` ASC) VISIBLE,
  CONSTRAINT `fk_Message_Chat1`
    FOREIGN KEY (`Chat_idChat`)
    REFERENCES `humorussia-database`.`Chat` (`idChat`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Message_Notification1`
    FOREIGN KEY (`Notification_idNotification`)
    REFERENCES `humorussia-database`.`Notification` (`idNotification`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `humorussia-database`.`User_has_Achievement`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `humorussia-database`.`User_has_Achievement` (
  `User_idUser` INT NOT NULL,
  `Achievement_idAchievement` INT NOT NULL,
  PRIMARY KEY (`User_idUser`, `Achievement_idAchievement`),
  INDEX `fk_User_has_Achievement_Achievement1_idx` (`Achievement_idAchievement` ASC) VISIBLE,
  INDEX `fk_User_has_Achievement_User1_idx` (`User_idUser` ASC) VISIBLE,
  CONSTRAINT `fk_User_has_Achievement_User1`
    FOREIGN KEY (`User_idUser`)
    REFERENCES `humorussia-database`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Achievement_Achievement1`
    FOREIGN KEY (`Achievement_idAchievement`)
    REFERENCES `humorussia-database`.`Achievement` (`idAchievement`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `humorussia-database`.`User_has_level`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `humorussia-database`.`User_has_level` (
  `User_idUser` INT NOT NULL,
  `level_idlevel` INT NOT NULL,
  PRIMARY KEY (`User_idUser`, `level_idlevel`),
  INDEX `fk_User_has_level_level1_idx` (`level_idlevel` ASC) VISIBLE,
  INDEX `fk_User_has_level_User1_idx` (`User_idUser` ASC) VISIBLE,
  CONSTRAINT `fk_User_has_level_User1`
    FOREIGN KEY (`User_idUser`)
    REFERENCES `humorussia-database`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_level_level1`
    FOREIGN KEY (`level_idlevel`)
    REFERENCES `humorussia-database`.`level` (`idlevel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `humorussia-database`.`Sourse_data_for_analysis_has_level`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `humorussia-database`.`Sourse_data_for_analysis_has_level` (
  `Sourse_data_for_analysis_idSourse_data_for_analysis` INT NOT NULL,
  `level_idlevel` INT NOT NULL,
  PRIMARY KEY (`Sourse_data_for_analysis_idSourse_data_for_analysis`, `level_idlevel`),
  INDEX `fk_Sourse_data_for_analysis_has_level_level1_idx` (`level_idlevel` ASC) VISIBLE,
  INDEX `fk_Sourse_data_for_analysis_has_level_Sourse_data_for_analy_idx` (`Sourse_data_for_analysis_idSourse_data_for_analysis` ASC) VISIBLE,
  CONSTRAINT `fk_Sourse_data_for_analysis_has_level_Sourse_data_for_analysis1`
    FOREIGN KEY (`Sourse_data_for_analysis_idSourse_data_for_analysis`)
    REFERENCES `humorussia-database`.`Sourse_data_for_analysis` (`idSourse_data_for_analysis`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Sourse_data_for_analysis_has_level_level1`
    FOREIGN KEY (`level_idlevel`)
    REFERENCES `humorussia-database`.`level` (`idlevel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `humorussia-database`.`User_has_Notification`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `humorussia-database`.`User_has_Notification` (
  `User_idUser` INT NOT NULL,
  `Notification_idNotification` INT NOT NULL,
  `Notification_User_idUser` INT NOT NULL,
  PRIMARY KEY (`User_idUser`, `Notification_idNotification`, `Notification_User_idUser`),
  INDEX `fk_User_has_Notification_Notification1_idx` (`Notification_idNotification` ASC, `Notification_User_idUser` ASC) VISIBLE,
  INDEX `fk_User_has_Notification_User1_idx` (`User_idUser` ASC) VISIBLE,
  CONSTRAINT `fk_User_has_Notification_User1`
    FOREIGN KEY (`User_idUser`)
    REFERENCES `humorussia-database`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Notification_Notification1`
    FOREIGN KEY (`Notification_idNotification` , `Notification_User_idUser`)
    REFERENCES `humorussia-database`.`Notification` (`idNotification` , `User_idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `humorussia-database`.`User_has_Friend`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `humorussia-database`.`User_has_Friend` (
  `User_idUser` INT NOT NULL,
  `Friend_idFriend` INT NOT NULL,
  PRIMARY KEY (`User_idUser`, `Friend_idFriend`),
  INDEX `fk_User_has_Friend_Friend1_idx` (`Friend_idFriend` ASC) VISIBLE,
  INDEX `fk_User_has_Friend_User1_idx` (`User_idUser` ASC) VISIBLE,
  CONSTRAINT `fk_User_has_Friend_User1`
    FOREIGN KEY (`User_idUser`)
    REFERENCES `humorussia-database`.`User` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_User_has_Friend_Friend1`
    FOREIGN KEY (`Friend_idFriend`)
    REFERENCES `humorussia-database`.`Friend` (`idFriend`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
